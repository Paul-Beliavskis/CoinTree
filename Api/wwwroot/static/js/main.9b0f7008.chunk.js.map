{"version":3,"sources":["services/CoinApi.ts","components/App.js","reportWebVitals.js","index.js"],"names":["getCoinStatsAsync","coin","a","axios","get","itemList","console","log","useStyles","makeStyles","table","minWidth","App","useState","coinStat","setCoinStat","classes","useEffect","fetchData","ask","bid","spotRate","change","rows","then","response","status","percentChange","previous","data","current","Math","abs","className","FormControl","formControl","style","width","Select","defaultValue","textAlign","backgroundColor","marginRight","onChange","e","target","value","MenuItem","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","index","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b0f7008.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst getCoinStatsAsync = async (coin: String) => {\r\ntry{\r\n    var itemList = await axios.get(`https://cointreetest.azurewebsites.net/api/coins/${coin}`);\r\n\r\n    return itemList;\r\n}catch(e)\r\n    {\r\n        //TODO: send back and error code so calling code can display the appropriate error toast to the user\r\n        console.log(\"Failed to fetch items\");\r\n    }\r\nreturn [{}];\r\n}\r\n\r\nconst CoinApi = {\r\n    getCoinStatsAsync: getCoinStatsAsync\r\n}\r\n\r\nexport { getCoinStatsAsync };\r\n","import '../styles/App.css';\nimport {getCoinStatsAsync} from '../services/CoinApi';\nimport {useState, useEffect} from 'react';\nimport { config } from '@fortawesome/fontawesome-svg-core'\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(ask, bid, spotRate, change) {\n  return { ask, bid, spotRate, change };\n}\n\nfunction CalculatePercentChange(previous, current) {\n  return  100 * Math.abs( ( previous - current ) / ( (previous + current)/2 ) );\n }\n\nfunction App() {\n  const [coinStat, setCoinStat] = useState({});\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetchData('BTC')\n  }, [])\n\n  const rows = [\n    createData(coinStat.ask, coinStat.bid, coinStat.spotRate, coinStat.change),\n  ];\n\n  const fetchData = (coin) => {\n    getCoinStatsAsync(coin).then((response) => {\n      if(response.status === 200)\n      {\n        let percentChange = CalculatePercentChange(response.data.spotRate, coinStat.spotRate)\n        setCoinStat({...response.data, ...{change: percentChange}});\n      }\n    });\n  }\n\n  return (\n    <div className=\"App\">\n          <FormControl  className={classes.formControl} style={{width:'5%'}}>\n        <Select\n          defaultValue={'BTC'}\n          style={{textAlign:'center', backgroundColor:'white', marginRight: '20px'}}\n          onChange={(e) => fetchData(e.target.value)}\n        >\n          <MenuItem value={'BTC'}>BTC</MenuItem>\n          <MenuItem value={'ETH'}>ETH</MenuItem>\n          <MenuItem value={'XRP'}>XRP</MenuItem>\n        </Select>\n      </FormControl>\n    <TableContainer style={{width: '35%'}} component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Ask (AUD)</TableCell>\n            <TableCell align=\"right\">Bid (AUD)</TableCell>\n            <TableCell align=\"right\">Spot rate (AUD)</TableCell>\n            <TableCell align=\"right\">Change</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, index) => (\n            <TableRow key={index}>\n              <TableCell align=\"left\">{row.ask}</TableCell>\n              <TableCell align=\"right\">{row.bid}</TableCell>\n              <TableCell align=\"right\">{row.spotRate}</TableCell>\n              {console.log(row)}\n              <TableCell align=\"right\" style={{color: row.change > -1 ? 'green' : 'red'}}>{row.change} %</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}